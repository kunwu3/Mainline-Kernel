name: Kernel Build and Release
on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Get Latest Kernel Version
        id: get_version
        run: |
          VERSION=$(curl -s https://www.kernel.org/releases.json | jq -r '.latest_stable.version')
          URL=$(curl -s https://www.kernel.org/releases.json | jq --arg VERSION $VERSION -r '.releases[] | select(.version == $VERSION) | .source')
          echo "::set-output name=version::$VERSION"
          echo "::set-output name=url::$URL"
      - name: Download and Compile Kernel
        run: |
          VERSION=${{ steps.get_version.outputs.version }}
          URL=${{ steps.get_version.outputs.url }}
          wget $URL
          tar -xf linux-$VERSION.tar.xz
          cd linux-$VERSION
          cp ../previous_version.txt .
          make defconfig
          make -j$(nproc)
          make deb-pkg
          cd ..
      - name: Upload to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./linux-*.deb
          asset_name: linux-$VERSION.deb
          asset_content_type: application/x-deb
      - name: Update Previous Version
        run: |
          VERSION=${{ steps.get_version.outputs.version }}
          echo $VERSION > previous_version.txt
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git add previous_version.txt
          git commit -m "Update previous version to $VERSION" || echo "No changes to commit"
          git push
