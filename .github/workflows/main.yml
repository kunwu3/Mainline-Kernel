name: Kernel Build and Release
on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Get Latest Kernel Version
        run: |
          VERSION=$(curl -s https://www.kernel.org/releases.json | jq -r '.latest_stable.version')
          URL=$(curl -s https://www.kernel.org/releases.json | jq --arg VERSION $VERSION -r '.releases[] | select(.version == $VERSION) | .source')
          previous_version=$(cat previous_version.txt)
          if [ "$VERSION" != "$previous_version" ]; then
            echo "VERSION=$VERSION" >> $GITHUB_ENV
            echo "URL=$URL" >> $GITHUB_ENV
            echo "NEW_KERNEL=true" >> $GITHUB_ENV
          else
            echo "NEW_KERNEL=false" >> $GITHUB_ENV
          fi
          
      - name: Download and Compile Kernel
        if: ${{ env.NEW_KERNEL == 'true' }}
        run: |
          VERSION=${{ env.VERSION }}
          URL=${{ env.URL }}
          sudo apt install wget build-essential bison flex libncurses-dev libssl-dev libelf-dev
          wget -q $URL
          tar -xf linux-$VERSION.tar.xz
          cd linux-$VERSION
          make defconfig
          make -j$(nproc)
          make deb-pkg
          cd ..
          
      - name: Upload to Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.VERSION }}
          files: ./linux-*.deb
          
      - name: Update Previous Version
        run: |
          VERSION=${{ env.VERSION }}
          echo $VERSION > previous_version.txt
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git add previous_version.txt
          git commit -m "Update kernel version to $VERSION" || echo "No changes to commit"
          git push
