name: Kernel Convert and Release
on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Get Latest Kernel Version
        run: |
          VERSION=$(curl -s https://www.kernel.org/releases.json | jq -r '.latest_stable.version')
          previous_version=$(cat previous_version.txt)
          if [ "$VERSION" != "$previous_version" ]; then
            echo "VERSION=$VERSION" >> $GITHUB_ENV
            echo "NEW_KERNEL=true" >> $GITHUB_ENV
          else
            echo "NEW_KERNEL=false" >> $GITHUB_ENV
          fi
          
      - name: Download and convert Kernel
        if: ${{ env.NEW_KERNEL == 'true' }}
        run: |
          VERSION=${{ env.VERSION }}
          url="https://kernel.ubuntu.com/~kernel-ppa/mainline/v$VERSION/amd64/"
          files=$(curl -s $url | grep -oP 'href="\K[^"]*\.deb')
          for file in $files; do
            wget -q "$url$file"
            folder=${file%.deb}
            mkdir -p "$folder"
            dpkg-deb -R $file $folder
            rm -f $file
            dpkg-deb --root-owner-group -Zgzip -b $folder $file
          done
          
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: '*.deb'
          tag: ${{ env.VERSION }}
          overwrite: true
          file_glob: true
       
          
      - name: Update Previous Version
        run: |
          VERSION=${{ env.VERSION }}
          echo $VERSION > previous_version.txt
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git add previous_version.txt
          git commit -m "Update kernel version to $VERSION" || echo "No changes to commit"
          git push
